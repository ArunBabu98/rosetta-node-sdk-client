/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SyncStatus model module.
 * @module model/SyncStatus
 * @version 1.4.1
 */
class SyncStatus {
    /**
     * Constructs a new <code>SyncStatus</code>.
     * SyncStatus is used to provide additional context about an implementation&#39;s sync status. It is often used to indicate that an implementation is healthy when it cannot be queried  until some sync phase occurs. If an implementation is immediately queryable, this model is often not populated.
     * @alias module:model/SyncStatus
     * @param currentIndex {Number} CurrentIndex is the index of the last synced block in the current stage.
     */
    constructor(currentIndex) { 
        
        SyncStatus.initialize(this, currentIndex);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currentIndex) { 
        obj['current_index'] = currentIndex;
    }

    /**
     * Constructs a <code>SyncStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SyncStatus} obj Optional instance to populate.
     * @return {module:model/SyncStatus} The populated <code>SyncStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SyncStatus();

            if (data.hasOwnProperty('current_index')) {
                obj['current_index'] = ApiClient.convertToType(data['current_index'], 'Number');
            }
            if (data.hasOwnProperty('target_index')) {
                obj['target_index'] = ApiClient.convertToType(data['target_index'], 'Number');
            }
            if (data.hasOwnProperty('stage')) {
                obj['stage'] = ApiClient.convertToType(data['stage'], 'String');
            }
        }
        return obj;
    }


}

/**
 * CurrentIndex is the index of the last synced block in the current stage.
 * @member {Number} current_index
 */
SyncStatus.prototype['current_index'] = undefined;

/**
 * TargetIndex is the index of the block that the implementation is attempting to sync to in the current stage.
 * @member {Number} target_index
 */
SyncStatus.prototype['target_index'] = undefined;

/**
 * Stage is the phase of the sync process.
 * @member {String} stage
 */
SyncStatus.prototype['stage'] = undefined;






export default SyncStatus;

